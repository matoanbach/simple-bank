# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to production

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
        id-token: write  # ✅ Required for OIDC authentication
        contents: read    # ✅ Allows reading repository content

    steps:
      # First step
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.31.0' # default is latest stable
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          # role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      # Second step
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t latest .
          docker push -a $REGISTRY/$REPOSITORY

      - name: Update kube config
        run: aws eks update-kubeconfig --name simple-bank --region us-east-2

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f eks/aws-auth.yaml
          kubectl apply -f eks/deployment.yaml
          kubectl apply -f eks/service.yaml
          kubectl apply -f eks/issuer.yaml
          kubectl apply -f eks/ingress.yaml